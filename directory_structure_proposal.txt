/seneca
    /constants
        any constants we might need

    /logger
        logger.py

    /contracts                              This is currently called 'NEW_contracts' b/c I didnt want to overwrite 'contracts' just yet
        /genesis                            We should put all genesis contracts here
            currency.sen.py
            atomic_swaps.sen.py
            ....
        /libs                               These are the libraries we expose inside smart contracts, ie modified datetime, psuedorandom, ect
            /math
            /time
            /random
            ....


    /db
        /cr
            SBBClient, CRContext, CRCommands, ect
        /drivers
            StateProxy, Stu's abstract drivers, ect
        /datatypes
            hashtable.py
            dynamicarray.py
            .....

    /execution                            The diff I see between execution/interpreter is the execution should be responsible
        executor.py                       for running compiled code, while the interpreter should be responsible for actually 'compiling' and validating source code
        book_keeper.py
        any other files we might need for sandboxing or actual execution
        /metering
            estimator.py, resource.py, tracer.c, ....

    /interpreter
        linter.py, parser.py, scope.py, whitelists.py, ect....



* Not super sure where to put CR. His only external imports should be the executor and a db driver, so we could put him
  in db, execution, or his own module. I dont have a strong opinion.  